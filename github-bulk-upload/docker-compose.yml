version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: investment-postgres
    environment:
      POSTGRES_DB: investment_workflow
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - investment-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: investment-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - investment-network

  # 后端API服务
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: investment-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password@postgres:5432/investment_workflow
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-production-jwt-secret
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    networks:
      - investment-network
    restart: unless-stopped

  # 前端应用
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: investment-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - investment-network
    restart: unless-stopped

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: investment-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - investment-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  investment-network:
    driver: bridge